{"version":3,"sources":["circularProgressivebar/circularProgressivebar.js","doughnutchart/doughnutchart.js","barchart/barchart.js","multibar/multibar.js","App.js","serviceWorker.js","index.js"],"names":["CircularProgressivebar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bar","strokeDashoffset","rangeChange","bind","assertThisInitialized","e","dashoffset","Math","PI","target","value","setState","react_default","a","createElement","id","data-pct","width","height","viewport","version","xmlns","r","cx","cy","fill","strokeDasharray","type","min","max","onChange","React","Component","DoughnutChart","cirvalu","dashoffsets","displayValue","newobj","name","CIRCUMFERENCE","console","log","progress","onClick","onMouseMove","stroke-width","stroke","val3","second","first","BarChart","map","val","index","x","y","fontSize","fontFamily","MultiBar","baseline","multibar","year","nda","upa","others","maxwidth","maxheight","x1","y1","x2","y2","opacity","toConsumableArray","Array","i","stroke-dasharray","App","className","barchart_barchart","multibar_multibar","circularProgressivebar_circularProgressivebar","doughnutchart_doughnutchart","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+UA0CeA,qBArCb,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACXC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACXC,IAAK,IACLC,iBAAkB,GAEpBT,EAAKU,YAAcV,EAAKU,YAAYC,KAAjBV,OAAAW,EAAA,EAAAX,CAAAD,IANRA,2EAQDa,GACV,IAGIC,EAFgB,EAAIC,KAAKC,GADhB,IAGqB,EADnBH,EAAEI,OAAOC,MAAQ,KAGhCf,KAAKgB,SAAS,CAACX,IAAKK,EAAEI,OAAOC,MAAOT,iBAAmBK,qCAMzD,OAAQM,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,OAAOC,WAAS,OACpBJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBAAR,IAAyBpB,KAAKI,MAAMC,IAApC,MACFY,EAAAC,EAAAC,cAAA,OAAKC,GAAG,MAAME,MAAM,MAAMC,OAAO,MAAMC,SAAS,cAAcC,QAAQ,MAAMC,MAAM,8BAEhFT,EAAAC,EAAAC,cAAA,UAAQC,GAAG,OAAOO,EAAE,KAAKC,GAAG,MAAMC,GAAG,MAAMC,KAAK,cAAcC,gBAAiB,SAASzB,iBAAkBN,KAAKI,MAAME,mBACrHW,EAAAC,EAAAC,cAAA,UAAQC,GAAG,MAAMO,EAAE,KAAKC,GAAG,MAAMC,GAAG,MAAMC,KAAK,cAAcC,gBAAgB,SAASzB,iBAAkBN,KAAKI,MAAME,qBAIvHW,EAAAC,EAAAC,cAAA,SAAOa,KAAK,QAAQC,IAAI,IAAIC,IAAM,MAAMnB,MAAOf,KAAKI,MAAMC,IAAK8B,SAAUnC,KAAKO,sBA/B7C6B,IAAMC,YC4E5BC,qBA3Eb,SAAAA,IAAa,IAAAzC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsC,IACXzC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwC,GAAAnC,KAAAH,QACKI,MAAQ,CACXC,IAAK,IACLC,iBAAkB,EAClBiC,QAAS,GACTC,YAAa,CAAC,kBAAmB,mBAAmB,IAEtD3C,EAAKU,YAAcV,EAAKU,YAAYC,KAAjBV,OAAAW,EAAA,EAAAX,CAAAD,IACnBA,EAAK4C,aAAe5C,EAAK4C,aAAajC,KAAlBV,OAAAW,EAAA,EAAAX,CAAAD,IATTA,2EAWDa,GACV,IAAIgC,EAAS1C,KAAKI,MAAMmC,QACxBG,EAAOhC,EAAEI,OAAO6B,MAAQjC,EAAEI,OAAOC,MAEjC,IACI6B,EAAgB,EAAIhC,KAAKC,GADhB,GAEbgC,QAAQC,IAAIF,GAEZ,IAAIJ,EAAcxC,KAAKI,MAAMoC,YAC7B,GAAqB,UAAlB9B,EAAEI,OAAO6B,KAAiB,CAC3B,IAAII,EAAWrC,EAAEI,OAAOC,MAAQ,IAChC8B,QAAQC,IAAIC,GACZP,EAAY,GAAKI,EAAiBG,EAEpC,GAAqB,WAAlBrC,EAAEI,OAAO6B,KAAkB,CAC5B,IAAII,EAAWrC,EAAEI,OAAOC,MAAQ,IAC9B8B,QAAQC,IAAIC,GACdP,EAAY,GAAKA,EAAY,GAAMI,EAAgBG,EAErD,GAAqB,UAAlBrC,EAAEI,OAAO6B,KAAiB,CAC3B,IAAII,EAAWrC,EAAEI,OAAOC,MAAQ,IAC9B8B,QAAQC,IAAIC,GACdP,EAAY,GAAKA,EAAY,GAAMI,EAAgBG,EAGrD/C,KAAKgB,SAAS,CAACuB,QAASG,EAAQF,YAAcA,yCAGnC9B,GAEQ,UAAhBA,EAAEI,OAAOM,IACVpB,KAAKgB,SAAS,CAACX,IAAK,KAEH,WAAhBK,EAAEI,OAAOM,IACVpB,KAAKgB,SAAS,CAACX,IAAK,KAEH,UAAhBK,EAAEI,OAAOM,IACVpB,KAAKgB,SAAS,CAACX,IAAK,sCAOxB,OAAQY,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QAAQC,WAAS,OACvBJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBAAR,IAAyBpB,KAAKI,MAAMC,IAApC,MACAY,EAAAC,EAAAC,cAAA,OAAK6B,QAAShD,KAAKyC,aAAcrB,GAAG,OAAOE,MAAM,MAAMC,OAAO,MAAMC,SAAS,gBAAgBC,QAAQ,MAAMC,MAAM,8BAC7GT,EAAAC,EAAAC,cAAA,UAAQS,GAAG,MAAMC,GAAG,MAAMF,EAAE,KAAOG,KAAK,gBACxCb,EAAAC,EAAAC,cAAA,UAASS,GAAG,MAAMC,GAAG,MAAMF,EAAE,KAAKG,KAAK,cAAemB,YAAajD,KAAKyC,aAAcrB,GAAG,QAAS8B,eAAa,MAAMC,OAAO,SAC5HlC,EAAAC,EAAAC,cAAA,UAAQS,GAAG,MAAMC,GAAG,MAAMF,EAAE,KAAMsB,YAAajD,KAAKyC,aAAgBrB,GAAG,SAASgC,KAAMpD,KAAKI,MAAMiD,OAAQvB,KAAK,cAAcoB,eAAa,MAAMC,OAAO,UAAUpB,gBAAgB,SAASzB,iBAAkBN,KAAKI,MAAMoC,YAAY,KAClOvB,EAAAC,EAAAC,cAAA,UAAQS,GAAG,MAAMC,GAAG,MAAMF,EAAE,KAAMsB,YAAajD,KAAKyC,aAAcrB,GAAG,QAAQU,KAAK,cAAcoB,eAAa,MAAMC,OAAO,UAAUpB,gBAAgB,SAASzB,iBAAmBN,KAAKI,MAAMoC,YAAY,OAM7MvB,EAAAC,EAAAC,cAAA,SAAOa,KAAK,OAAQW,KAAK,QAAQ5B,MAAOf,KAAKI,MAAMkD,MAAOnB,SAAUnC,KAAKO,cACzEU,EAAAC,EAAAC,cAAA,SAAOa,KAAK,OAAQW,KAAK,SAAS5B,MAAOf,KAAKI,MAAMiD,OAAQlB,SAAUnC,KAAKO,sBAtEnD6B,IAAMC,YCqBnBkB,qBApBb,SAAAA,IAAc,IAAA1D,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,IACZ1D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyD,GAAApD,KAAAH,QACOI,MAAQ,CAAC,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,KAFhCP,wEAMZ,OAAOoB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WAAWE,MAAM,QAAQC,OAAQ,SAElCvB,KAAKI,MAAMoD,IAAK,SAACC,EAAKC,GAAN,OACTzC,EAAAC,EAAAC,cAAA,SACCF,EAAAC,EAAAC,cAAA,QAAMwC,EAAG,GAAc,GAATD,EAAaE,EAAG,IAAMH,EAAKnC,MAAM,OAAOC,OAAQkC,EAAK,KAAM3B,KAAK,iBAC9Eb,EAAAC,EAAAC,cAAA,QAAMC,GAAG,SAASuC,EAAG,GAAa,GAARD,EAAYE,EAAG,IAAMH,EAAKI,SAAS,KAAKC,WAAW,QAAQhC,KAAK,SACrF2B,cAbRrB,IAAMC,mBCwFd0B,qBAvFb,SAAAA,IAAc,IAAAlE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+D,IACZlE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiE,GAAA5D,KAAAH,QACOI,MAAQ,CACX4D,SAAU,GACVC,SAAW,CAAC,CACVC,KAAM,KACNC,IAAI,IACJC,IAAI,GACJC,OAAO,KAET,CACEH,KAAM,KACNC,IAAI,IACJC,IAAI,IACJC,OAAO,KAET,CACEH,KAAM,KACNC,IAAI,IACJC,IAAI,IACJC,OAAO,OApBDxE,wEA8BZ,OAAOoB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WAAWE,MAAOgD,QAAiB/C,OAASgD,SACjDtD,EAAAC,EAAAC,cAAA,QAAMqD,GAHC,GAGaC,GAAG,IAAIC,GAHpB,GAGkCC,GAAIJ,IAAsBpB,OAAO,eAAeD,eAAc,IAAM0B,QAAQ,QACrH3D,EAAAC,EAAAC,cAAA,QAAOqD,GAJA,GAIcC,GAAIF,IAAsBG,GANxC,IAMsDC,GAAIJ,IAAqBpB,OAAO,eAAeD,eAAc,IAAM0B,QAAQ,QACxI3D,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAOqD,GAAG,QAAQC,GAAG,KAAKC,GAAG,MAAMC,GAAG,KAAOzB,eAAc,IAAIC,OAAO,UAAYyB,QAAQ,MAC1F3D,EAAAC,EAAAC,cAAA,QAAOwC,EAAE,MAAMC,EAAE,KAAMC,SAAS,KAAKC,WAAW,QAAQhC,KAAK,SAA7D,QAKHb,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAOqD,GAAG,QAAQC,GAAG,KAAKC,GAAG,MAAMC,GAAG,KAAOzB,eAAc,IAAIC,OAAO,UAAYyB,QAAQ,MAC1F3D,EAAAC,EAAAC,cAAA,QAAOwC,EAAE,MAAMC,EAAE,KAAMC,SAAS,KAAKC,WAAW,QAAQhC,KAAK,SAA7D,QAKHb,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAOqD,GAAG,QAAQC,GAAG,KAAKC,GAAG,MAAMC,GAAG,KAAOzB,eAAc,IAAIC,OAAO,UAAYyB,QAAQ,MAC1F3D,EAAAC,EAAAC,cAAA,QAAOwC,EAAE,MAAMC,EAAE,KAAMC,SAAS,KAAKC,WAAW,QAAQhC,KAAK,SAA7D,WAKChC,OAAA+E,EAAA,EAAA/E,CAAIgF,MAAM,IAAItB,IAAK,SAACG,EAAEoB,GAAH,OAChB9D,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAMqD,GA5BP,GA4BqBC,GA5BrB,GA4BwC,GAAJM,EAAQL,GA9B5C,IA8B0DC,GA5B1D,GA4B6E,GAAJI,EAAQ5B,OAAO,eAAeD,eAAc,IAAI8B,mBAAiB,MAAMJ,QAAQ,QACrJ3D,EAAAC,EAAAC,cAAA,QAAOwC,EAAE,KAAKC,EAAI,GAAS,GAAJmB,EAAQlB,SAAS,KAAKC,WAAW,QAAQhC,KAAK,SACpE,IAAc,IAARiD,EAAE,OAMlB/E,KAAKI,MAAM6D,SAAST,IAAK,SAACC,EAAKC,GAAN,OAClBzC,EAAAC,EAAAC,cAAA,SACCF,EAAAC,EAAAC,cAAA,QAAMwC,EAAG,GAAc,IAATD,EAAcE,EAAG,IAAMH,EAAIU,IAAK7C,MAAM,OAAOC,OAAQkC,EAAIU,IAAK,KAAMrC,KAAK,YACvFb,EAAAC,EAAAC,cAAA,QAAMC,GAAG,SAASuC,EAAG,GAAa,IAARD,EAAaE,EAAG,IAAMH,EAAIU,IAAKN,SAAS,KAAKC,WAAW,QAAQhC,KAAK,SAC1F2B,EAAIU,KAETlD,EAAAC,EAAAC,cAAA,QAAMwC,EAAG,GAAc,IAATD,EAAcE,EAAG,IAAMH,EAAIW,IAAK9C,MAAM,OAAOC,OAAQkC,EAAIW,IAAK,KAAMtC,KAAK,YACvFb,EAAAC,EAAAC,cAAA,QAAMC,GAAG,SAASuC,EAAG,GAAa,IAARD,EAAaE,EAAG,IAAMH,EAAIW,IAAKP,SAAS,KAAKC,WAAW,QAAQhC,KAAK,SAC1F2B,EAAIW,KAETnD,EAAAC,EAAAC,cAAA,QAAMwC,EAAG,IAAe,IAATD,EAAcE,EAAG,IAAMH,EAAIY,OAAQ/C,MAAM,OAAOC,OAAQkC,EAAIY,OAAQ,KAAMvC,KAAK,YAC9Fb,EAAAC,EAAAC,cAAA,QAAMC,GAAG,SAASuC,EAAG,IAAc,IAARD,EAAaE,EAAG,IAAMH,EAAIY,OAAQR,SAAS,KAAKC,WAAW,QAAQhC,KAAK,SAC9F2B,EAAIY,QAETpD,EAAAC,EAAAC,cAAA,QAAMC,GAAG,SAASuC,EAAG,GAAa,IAARD,EAAaE,EAAG,IAAKC,SAAS,KAAKC,WAAW,QAAQhC,KAAK,SAChF2B,EAAIS,iBAhFT9B,IAAMC,kBC4Bd4C,MAzBf,WACE,OACEhE,EAAAC,EAAAC,cAAA,OAAK+D,UAAU,OACfjE,EAAAC,EAAAC,cAAA,UAAQ+D,UAAU,cACZjE,EAAAC,EAAAC,cAAA,yFACAF,EAAAC,EAAAC,cAAA,uCAENF,EAAAC,EAAAC,cAAA,OAAK+D,UAAU,YACfjE,EAAAC,EAAAC,cAAA,OAAK+D,UAAU,SACTjE,EAAAC,EAAAC,cAACgE,EAAD,OAENlE,EAAAC,EAAAC,cAAA,OAAK+D,UAAU,SACTjE,EAAAC,EAAAC,cAACiE,EAAD,OAEJnE,EAAAC,EAAAC,cAAA,OAAK+D,UAAU,UACTjE,EAAAC,EAAAC,cAACkE,EAAD,OAENpE,EAAAC,EAAAC,cAAA,OAAK+D,UAAU,UACTjE,EAAAC,EAAAC,cAACmE,EAAD,UCbQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5E,EAAAC,EAAAC,cAAC2E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.46885bdc.chunk.js","sourcesContent":["import React from 'react'\nimport './circularProgressivebar.css'\n\n\nclass CircularProgressivebar extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      bar: 100,\n      strokeDashoffset: 0\n    }\n    this.rangeChange = this.rangeChange.bind(this)\n  }\n  rangeChange(e){\n    var RADIUS = 90;\n    var CIRCUMFERENCE = 2 * Math.PI * RADIUS;\n    var progress = e.target.value / 100;\n    var dashoffset = CIRCUMFERENCE * (1 - progress);\n\n    this.setState({bar: e.target.value, strokeDashoffset:  dashoffset})\n  }\n\n\nrender(){\n \n  return( <div >\n    <div id=\"cont\" data-pct=\"100\">\n        <div id=\"progress-val\"> {this.state.bar} %</div>\n      <svg id=\"svg\" width=\"200\" height=\"200\" viewport=\"0 0 100 100\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n\n        <circle id=\"bar2\" r=\"90\" cx=\"100\" cy=\"100\" fill=\"transparent\" strokeDasharray =\"565.48\" strokeDashoffset={this.state.strokeDashoffset}></circle>\n        <circle id=\"bar\" r=\"90\" cx=\"100\" cy=\"100\" fill=\"transparent\" strokeDasharray=\"565.48\" strokeDashoffset={this.state.strokeDashoffset}></circle>\n      </svg>\n    </div>\n\n    <input type=\"range\" min=\"0\" max = \"100\" value={this.state.bar} onChange={this.rangeChange}/>\n\n  </div>)\n}\n\n}\n\nexport default CircularProgressivebar\n","import React from 'react'\nimport './doughnutchart.css'\n\n\nclass DoughnutChart extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      bar: 100,\n      strokeDashoffset: 0,\n      cirvalu: {},\n      dashoffsets: [141.3716694115407, 339.29200658769764,0]\n    }\n    this.rangeChange = this.rangeChange.bind(this)\n    this.displayValue = this.displayValue.bind(this)\n  }\n  rangeChange(e){\n    let newobj = this.state.cirvalu\n    newobj[e.target.name] = e.target.value\n\n    var RADIUS = 90;\n    var CIRCUMFERENCE = 2 * Math.PI * RADIUS;\n    console.log(CIRCUMFERENCE);\n\n    let dashoffsets = this.state.dashoffsets;\n    if(e.target.name === 'first'){\n      let progress = e.target.value / 100;\n      console.log(progress);\n      dashoffsets[0] = CIRCUMFERENCE * (progress);\n    }\n    if(e.target.name === 'second'){\n      let progress = e.target.value / 100;\n        console.log(progress);\n      dashoffsets[1] = dashoffsets[0] + (CIRCUMFERENCE * progress);\n    }\n    if(e.target.name === 'third'){\n      let progress = e.target.value / 100;\n        console.log(progress);\n      dashoffsets[2] = dashoffsets[1] + (CIRCUMFERENCE * progress);\n    }\n\n    this.setState({cirvalu: newobj, dashoffsets:  dashoffsets})\n  }\n\n  displayValue(e){\n\n    if(e.target.id === \"first\" ){\n      this.setState({bar: 25})\n    }\n    if(e.target.id === \"second\" ){\n      this.setState({bar: 35})\n    }\n    if(e.target.id === \"third\" ){\n      this.setState({bar: 40})\n    }\n\n  }\n\nrender(){\n\n  return( <div >\n    <div id=\"cont1\" data-pct=\"100\">\n      <div id=\"progress-val\"> {this.state.bar} %</div>\n      <svg onClick={this.displayValue} id=\"svg1\" width=\"300\" height=\"300\" viewport=\"50 50 150 150\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"150\" cy=\"150\" r=\"90\"   fill=\"transparent\" />\n          <circle  cx=\"150\" cy=\"150\" r=\"90\" fill=\"transparent\"  onMouseMove={this.displayValue} id=\"first\"  stroke-width=\"15%\" stroke=\"grey\"/>\n          <circle cx=\"150\" cy=\"150\" r=\"90\"  onMouseMove={this.displayValue}   id=\"second\" val3={this.state.second} fill=\"transparent\" stroke-width=\"16%\" stroke=\"#00CCFF\" strokeDasharray=\"565.48\" strokeDashoffset={this.state.dashoffsets[0]}/>\n          <circle cx=\"150\" cy=\"150\" r=\"90\"  onMouseMove={this.displayValue} id=\"third\" fill=\"transparent\" stroke-width=\"17%\" stroke=\"#ce4b99\" strokeDasharray=\"565.48\" strokeDashoffset= {this.state.dashoffsets[1]}/>\n\n      </svg>\n    </div>\n\n\n    <input type=\"text\"  name=\"first\" value={this.state.first} onChange={this.rangeChange}/>\n    <input type=\"text\"  name=\"second\" value={this.state.second} onChange={this.rangeChange}/>\n\n  </div>)\n}\n}\n\nexport default DoughnutChart\n","import React from 'react'\nimport './barchart.css'\n\n\nclass BarChart extends React.Component {\n  constructor() {\n    super()\n      this.state = [100, 150, 175, 50, 110, 30, 160]\n }\n\n  render(){\n    return(<svg id=\"barchart\" width=\"300px\" height= \"200px\">\n \n                 {this.state.map( (val, index) =>\n                         <g>\n                          <rect x={10 + index *  30} y={200 - val} width=\"20px\" height={val+ 'px'} fill=\"rgb(0,0,255)\" />\n                          <text id=\"myText\" x={10 + index * 30} y={199 - val} fontSize=\"11\" fontFamily=\"arial\" fill=\"black\"  >\n                              {val}\n                          </text>\n                        </g>)}\n          </svg >\n        )\n  }\n}\n\nexport default BarChart\n","import React from 'react'\nimport './multibar.css'\n\n\nclass MultiBar extends React.Component {\n  constructor() {\n    super()\n      this.state = {\n        baseline: 50,\n        multibar : [{\n          year: 2014,\n          nda:336,\n          upa:60,\n          others:147\n        },\n        {\n          year: 2009,\n          nda:159,\n          upa:262,\n          others:122\n        },\n        {\n          year: 2004,\n          nda:181,\n          upa:218,\n          others:144\n        }]\n      }\n }\n\n  render(){\n      let maxwidth = 500;\n      let maxheight = 400;\n      let baseline = 50;\n\n    return(<svg id=\"barchart\" width={maxwidth + 'px'} height= {maxheight + 'px'}>\n              <line x1={baseline} y1=\"0\" x2={baseline} y2={maxheight - baseline} stroke=\"rgb(255,0,0)\" stroke-width= \"1\"   opacity=\"0.6\" />\n              <line  x1={baseline} y1={maxheight - baseline} x2={maxwidth} y2={maxheight - baseline}stroke=\"rgb(255,0,0)\" stroke-width= \"1\"   opacity=\"0.6\" />\n              <g>\n                <line  x1=\"150px\" y1=\"25\" x2=\"175\" y2=\"25\"   stroke-width= \"5\" stroke=\"#ff9933\"   opacity=\"1\" />\n                <text  x=\"185\" y=\"29\"  fontSize=\"11\" fontFamily=\"arial\" fill=\"black\"  >\n                  NDA\n                </text>\n             </g>\n\n             <g>\n               <line  x1=\"250px\" y1=\"25\" x2=\"275\" y2=\"25\"   stroke-width= \"5\" stroke=\"#00BFFF\"   opacity=\"1\" />\n               <text  x=\"285\" y=\"29\"  fontSize=\"11\" fontFamily=\"arial\" fill=\"black\"  >\n                 UPA\n               </text>\n            </g>\n\n            <g>\n              <line  x1=\"350px\" y1=\"25\" x2=\"375\" y2=\"25\"   stroke-width= \"5\" stroke=\"#a7a2a2\"   opacity=\"1\" />\n              <text  x=\"385\" y=\"29\"  fontSize=\"11\" fontFamily=\"arial\" fill=\"black\"  >\n                OTHERS\n              </text>\n           </g>\n\n              {[...Array(6)].map( (x,i) =>\n                  <g>\n                      <line x1={baseline} y1={baseline + i * 50} x2={maxwidth} y2={baseline + i * 50} stroke=\"rgb(255,0,0)\" stroke-width= \"1\" stroke-dasharray=\"4 1\" opacity=\"0.6\" />\n                        <text  x=\"27\" y= {53 + i * 50} fontSize=\"11\" fontFamily=\"arial\" fill=\"black\"  >\n                        {400- (i+2)  * 50}\n                      </text>\n                  </g>\n                  )\n              }\n\n              {this.state.multibar.map( (val, index) =>\n                      <g>\n                       <rect x={60 + index *  120} y={350 - val.nda} width=\"20px\" height={val.nda+ 'px'} fill=\"#ff9933\" />\n                       <text id=\"myText\" x={60 + index * 120} y={350 - val.nda} fontSize=\"11\" fontFamily=\"arial\" fill=\"black\"  >\n                           {val.nda}\n                       </text>\n                       <rect x={90 + index *  120} y={350 - val.upa} width=\"20px\" height={val.upa+ 'px'} fill=\"#00BFFF\" />\n                       <text id=\"myText\" x={90 + index * 120} y={350 - val.upa} fontSize=\"11\" fontFamily=\"arial\" fill=\"black\"  >\n                           {val.upa}\n                       </text>\n                       <rect x={120 + index *  120} y={350 - val.others} width=\"20px\" height={val.others+ 'px'} fill=\"#a7a2a2\" />\n                       <text id=\"myText\" x={120 + index * 120} y={350 - val.others} fontSize=\"11\" fontFamily=\"arial\" fill=\"black\"  >\n                           {val.others}\n                       </text>\n                       <text id=\"myText\" x={90 + index * 120} y={360} fontSize=\"11\" fontFamily=\"arial\" fill=\"black\"  >\n                           {val.year}\n                       </text>\n                     </g>)}\n          </svg >\n        )\n  }\n}\n\nexport default MultiBar\n","import React from 'react';\nimport CircularProgressivebar from './circularProgressivebar/circularProgressivebar';\nimport DoughnutChart from './doughnutchart/doughnutchart'\nimport BarChart from './barchart/barchart'\nimport MultiBar from './multibar/multibar'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <header className=\"App-header\">\n          <h2>Bar Chart  || Multibar Chart || Circular Progressive Bar || Doughnuts Chart</h2>\n          <h3> Built in SVG and REACT </h3>\n    </header>\n    <div className=\"upperdiv\">\n    <div className=\"chart\">\n          <BarChart />\n    </div>\n    <div className=\"chart\">\n          <MultiBar />\n    </div>\n      <div className=\"chart \">\n            <CircularProgressivebar />\n      </div>\n      <div className=\"chart \">\n            <DoughnutChart />\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}